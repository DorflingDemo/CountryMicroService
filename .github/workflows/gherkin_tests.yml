name: Run Gherkin Tests (TypeScript)

on:
  push:
    branches: [ main ] # Or your primary branch
  pull_request:
    branches: [ main ] # Or your primary branch

jobs:
  test:
    runs-on: ubuntu-latest # Use a standard GitHub-hosted Linux runner
    steps:
    - name: Check out code
      uses: actions/checkout@v4 # Action to get your repository code

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Choose a suitable LTS Node.js version

    - name: Install dependencies
      run: npm install # Installs dependencies listed in package.json, including dotenv

    - name: Create .env file
      run: echo "API_KEY=${{ secrets.API_KEY }}" > .env
      # This creates the .env file using the secret stored in GitHub repository settings

    - name: Build TypeScript
      run: npm run build # Compile TypeScript to JavaScript

    - name: Verify build output # <-- ADD THIS STEP
      run: ls -R dist # List contents of dist directory recursively

    - name: Start server in background using nohup
      run: nohup npm start > server.log 2>&1 & # Use nohup, redirect stdout/stderr to server.log, run in background
      # nohup prevents the process from stopping when the shell exits
      # Output is redirected to server.log for debugging if needed

    - name: Wait for server to be ready
      run: npx wait-on http://localhost:3000/countries -t 15000 # Wait for the /countries endpoint, timeout after 15s
      # wait-on was installed via package.json devDependencies

    - name: Run Cucumber tests
      # Explicitly require the setup file first, then the step definitions
      run: npx cucumber-js features/**/*.feature -r dist/features/support/setup.js -r dist/features/step_definitions/**/*.js
